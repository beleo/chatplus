{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/autotranslate.js","meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/permissions.js","meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/models/Messages.js","meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/models/Subscriptions.js","meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/methods/saveSettings.js","meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/methods/translateMessage.js","meteor://ðŸ’»app/packages/rocketchat:autotranslate/server/methods/getSupportedLanguages.js"],"names":["Meteor","startup","RocketChat","settings","add","type","group","section","enableQuery","_id","value","AutoTranslate","languages","enabled","get","apiKey","supportedLanguages","callbacks","translateMessage","bind","priority","MEDIUM","key","tokenize","message","tokens","Array","isArray","tokenizeEmojis","tokenizeCode","tokenizeURLs","tokenizeMentions","count","length","msg","replace","match","token","push","text","schemes","split","join","RegExp","pre","post","pretoken","posttoken","html","Markdown","parseMessageNotEscaped","tokenIndex","hasOwnProperty","indexOf","newToken","mentions","forEach","mention","username","channels","channel","name","deTokenize","noHtml","room","targetLanguage","targetLanguages","models","Subscriptions","getAutoTranslateLanguagesByRoomAndNotUser","u","defer","translations","targetMessage","Object","assign","s","escapeHTML","String","msgs","map","encodeURIComponent","query","getSupportedLanguages","language","_","findWhere","substr","result","HTTP","params","target","e","console","log","statusCode","data","txt","translation","translatedText","isEmpty","Messages","addTranslations","attachments","index","attachment","description","addAttachmentTranslations","response","error","status","Permissions","findOne","insert","roles","messageId","updateObj","keys","update","$set","attachmentIndex","updateAutoTranslateById","autoTranslate","$unset","updateAutoTranslateLanguageById","autoTranslateLanguage","rid","userId","subscriptionsRaw","model","rawCollection","distinct","wrapAsync","$ne","methods","field","options","Error","method","authz","hasPermission","check","subscription","findOneByRoomIdAndUserId","defaultLanguage","Rooms","findOneById","DDPRateLimiter","addRule"],"mappings":"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","file":"/packages/rocketchat_autotranslate.js","sourcesContent":["Meteor.startup(function() {\n\tRocketChat.settings.add('AutoTranslate_Enabled', false, { type: 'boolean', group: 'Message', section: 'AutoTranslate', public: true });\n\tRocketChat.settings.add('AutoTranslate_GoogleAPIKey', '', { type: 'string', group: 'Message', section: 'AutoTranslate', enableQuery: { _id: 'AutoTranslate_Enabled', value: true } });\n});\n","class AutoTranslate {\n\tconstructor() {\n\t\tthis.languages = [];\n\t\tthis.enabled = RocketChat.settings.get('AutoTranslate_Enabled');\n\t\tthis.apiKey = RocketChat.settings.get('AutoTranslate_GoogleAPIKey');\n\t\tthis.supportedLanguages = {};\n\t\tRocketChat.callbacks.add('afterSaveMessage', this.translateMessage.bind(this), RocketChat.callbacks.priority.MEDIUM, 'AutoTranslate');\n\n\t\tRocketChat.settings.get('AutoTranslate_Enabled', (key, value) => {\n\t\t\tthis.enabled = value;\n\t\t});\n\t\tRocketChat.settings.get('AutoTranslate_GoogleAPIKey', (key, value) => {\n\t\t\tthis.apiKey = value;\n\t\t});\n\t}\n\n\ttokenize(message) {\n\t\tif (!message.tokens || !Array.isArray(message.tokens)) {\n\t\t\tmessage.tokens = [];\n\t\t}\n\t\tmessage = this.tokenizeEmojis(message);\n\t\tmessage = this.tokenizeCode(message);\n\t\tmessage = this.tokenizeURLs(message);\n\t\tmessage = this.tokenizeMentions(message);\n\t\treturn message;\n\t}\n\n\ttokenizeEmojis(message) {\n\t\tlet count = message.tokens.length;\n\t\tmessage.msg = message.msg.replace(/:[+\\w\\d]+:/g, function(match) {\n\t\t\tconst token = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\tmessage.tokens.push({\n\t\t\t\ttoken,\n\t\t\t\ttext: match\n\t\t\t});\n\t\t\treturn token;\n\t\t});\n\n\t\treturn message;\n\t}\n\n\ttokenizeURLs(message) {\n\t\tlet count = message.tokens.length;\n\n\t\tconst schemes = RocketChat.settings.get('Markdown_SupportSchemesForLink').split(',').join('|');\n\n\t\t// Support ![alt text](http://image url) and [text](http://link)\n\t\tmessage.msg = message.msg.replace(new RegExp(`(!?\\\\[)([^\\\\]]+)(\\\\]\\\\((?:${ schemes }):\\\\/\\\\/[^\\\\)]+\\\\))`, 'gm'), function(match, pre, text, post) {\n\t\t\tconst pretoken = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\tmessage.tokens.push({\n\t\t\t\ttoken: pretoken,\n\t\t\t\ttext: pre\n\t\t\t});\n\n\t\t\tconst posttoken = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\tmessage.tokens.push({\n\t\t\t\ttoken: posttoken,\n\t\t\t\ttext: post\n\t\t\t});\n\n\t\t\treturn pretoken + text + posttoken;\n\t\t});\n\n\t\t// Support <http://link|Text>\n\t\tmessage.msg = message.msg.replace(new RegExp(`((?:<|&lt;)(?:${ schemes }):\\\\/\\\\/[^\\\\|]+\\\\|)(.+?)(?=>|&gt;)((?:>|&gt;))`, 'gm'), function(match, pre, text, post) {\n\t\t\tconst pretoken = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\tmessage.tokens.push({\n\t\t\t\ttoken: pretoken,\n\t\t\t\ttext: pre\n\t\t\t});\n\n\t\t\tconst posttoken = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\tmessage.tokens.push({\n\t\t\t\ttoken: posttoken,\n\t\t\t\ttext: post\n\t\t\t});\n\n\t\t\treturn pretoken + text + posttoken;\n\t\t});\n\n\t\treturn message;\n\t}\n\n\ttokenizeCode(message) {\n\t\tlet count = message.tokens.length;\n\n\t\tmessage.html = message.msg;\n\t\tmessage = RocketChat.Markdown.parseMessageNotEscaped(message);\n\t\tmessage.msg = message.html;\n\n\t\tfor (const tokenIndex in message.tokens) {\n\t\t\tif (message.tokens.hasOwnProperty(tokenIndex)) {\n\t\t\t\tconst token = message.tokens[tokenIndex].token;\n\t\t\t\tif (token.indexOf('notranslate') === -1) {\n\t\t\t\t\tconst newToken = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\t\t\tmessage.msg = message.msg.replace(token, newToken);\n\t\t\t\t\tmessage.tokens[tokenIndex].token = newToken;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn message;\n\t}\n\n\ttokenizeMentions(message) {\n\t\tlet count = message.tokens.length;\n\n\t\tif (message.mentions && message.mentions.length > 0) {\n\t\t\tmessage.mentions.forEach(mention => {\n\t\t\t\tmessage.msg = message.msg.replace(new RegExp(`(@${ mention.username })`, 'gm'), match => {\n\t\t\t\t\tconst token = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\t\t\tmessage.tokens.push({\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\ttext: match\n\t\t\t\t\t});\n\t\t\t\t\treturn token;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (message.channels && message.channels.length > 0) {\n\t\t\tmessage.channels.forEach(channel => {\n\t\t\t\tmessage.msg = message.msg.replace(new RegExp(`(#${ channel.name })`, 'gm'), match => {\n\t\t\t\t\tconst token = `<i class=notranslate>{${ count++ }}</i>`;\n\t\t\t\t\tmessage.tokens.push({\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\ttext: match\n\t\t\t\t\t});\n\t\t\t\t\treturn token;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn message;\n\t}\n\n\tdeTokenize(message) {\n\t\tif (message.tokens && message.tokens.length > 0) {\n\t\t\tfor (const {token, text, noHtml} of message.tokens) {\n\t\t\t\tmessage.msg = message.msg.replace(token, () => noHtml ? noHtml : text);\n\t\t\t}\n\t\t}\n\t\treturn message.msg;\n\t}\n\n\ttranslateMessage(message, room, targetLanguage) {\n\t\tif (this.enabled && this.apiKey) {\n\t\t\tlet targetLanguages;\n\t\t\tif (targetLanguage) {\n\t\t\t\ttargetLanguages = [ targetLanguage ];\n\t\t\t} else {\n\t\t\t\ttargetLanguages = RocketChat.models.Subscriptions.getAutoTranslateLanguagesByRoomAndNotUser(room._id, message.u && message.u._id);\n\t\t\t}\n\t\t\tif (message.msg) {\n\t\t\t\tMeteor.defer(() => {\n\t\t\t\t\tconst translations = {};\n\t\t\t\t\tlet targetMessage = Object.assign({}, message);\n\n\t\t\t\t\ttargetMessage.html = s.escapeHTML(String(targetMessage.msg));\n\t\t\t\t\ttargetMessage = this.tokenize(targetMessage);\n\n\t\t\t\t\tlet msgs = targetMessage.msg.split('\\n');\n\t\t\t\t\tmsgs = msgs.map(msg => encodeURIComponent(msg));\n\t\t\t\t\tconst query = `q=${ msgs.join('&q=') }`;\n\n\t\t\t\t\tconst supportedLanguages = this.getSupportedLanguages('en');\n\t\t\t\t\ttargetLanguages.forEach(language => {\n\t\t\t\t\t\tif (language.indexOf('-') !== -1 && !_.findWhere(supportedLanguages, { language })) {\n\t\t\t\t\t\t\tlanguage = language.substr(0, 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet result;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresult = HTTP.get('https://translation.googleapis.com/language/translate/v2', { params: { key: this.apiKey, target: language }, query });\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.log('Error translating message', e);\n\t\t\t\t\t\t\treturn message;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (result.statusCode === 200 && result.data && result.data.data && result.data.data.translations && Array.isArray(result.data.data.translations) && result.data.data.translations.length > 0) {\n\t\t\t\t\t\t\tconst txt = result.data.data.translations.map(translation => translation.translatedText).join('\\n');\n\t\t\t\t\t\t\ttranslations[language] = this.deTokenize(Object.assign({}, targetMessage, { msg: txt }));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!_.isEmpty(translations)) {\n\t\t\t\t\t\tRocketChat.models.Messages.addTranslations(message._id, translations);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (message.attachments && message.attachments.length > 0) {\n\t\t\t\tMeteor.defer(() => {\n\t\t\t\t\tfor (const index in message.attachments) {\n\t\t\t\t\t\tif (message.attachments.hasOwnProperty(index)) {\n\t\t\t\t\t\t\tconst attachment = message.attachments[index];\n\t\t\t\t\t\t\tconst translations = {};\n\t\t\t\t\t\t\tif (attachment.description || attachment.text) {\n\t\t\t\t\t\t\t\tconst query = `q=${ encodeURIComponent(attachment.description || attachment.text) }`;\n\t\t\t\t\t\t\t\tconst supportedLanguages = this.getSupportedLanguages('en');\n\t\t\t\t\t\t\t\ttargetLanguages.forEach(language => {\n\t\t\t\t\t\t\t\t\tif (language.indexOf('-') !== -1 && !_.findWhere(supportedLanguages, { language })) {\n\t\t\t\t\t\t\t\t\t\tlanguage = language.substr(0, 2);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst result = HTTP.get('https://translation.googleapis.com/language/translate/v2', { params: { key: this.apiKey, target: language }, query });\n\t\t\t\t\t\t\t\t\tif (result.statusCode === 200 && result.data && result.data.data && result.data.data.translations && Array.isArray(result.data.data.translations) && result.data.data.translations.length > 0) {\n\t\t\t\t\t\t\t\t\t\tconst txt = result.data.data.translations.map(translation => translation.translatedText).join('\\n');\n\t\t\t\t\t\t\t\t\t\ttranslations[language] = txt;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (!_.isEmpty(translations)) {\n\t\t\t\t\t\t\t\t\tRocketChat.models.Messages.addAttachmentTranslations(message._id, index, translations);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\n\tgetSupportedLanguages(target) {\n\t\tif (this.enabled && this.apiKey) {\n\t\t\tif (this.supportedLanguages[target]) {\n\t\t\t\treturn this.supportedLanguages[target];\n\t\t\t}\n\n\t\t\tlet result;\n\t\t\tconst params = { key: this.apiKey };\n\t\t\tif (target) {\n\t\t\t\tparams.target = target;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tresult = HTTP.get('https://translation.googleapis.com/language/translate/v2/languages', { params });\n\t\t\t} catch (e) {\n\t\t\t\tif (e.response && e.response.statusCode === 400 && e.response.data && e.response.data.error && e.response.data.error.status === 'INVALID_ARGUMENT') {\n\t\t\t\t\tparams.target = 'en';\n\t\t\t\t\ttarget = 'en';\n\t\t\t\t\tif (!this.supportedLanguages[target]) {\n\t\t\t\t\t\tresult = HTTP.get('https://translation.googleapis.com/language/translate/v2/languages', { params });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (this.supportedLanguages[target]) {\n\t\t\t\t\treturn this.supportedLanguages[target];\n\t\t\t\t} else {\n\t\t\t\t\tthis.supportedLanguages[target || 'en'] = result && result.data && result.data.data && result.data.data.languages;\n\t\t\t\t\treturn this.supportedLanguages[target || 'en'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nRocketChat.AutoTranslate = new AutoTranslate;\n","Meteor.startup(() => {\n\tif (RocketChat.models && RocketChat.models.Permissions) {\n\t\tif (!RocketChat.models.Permissions.findOne({ _id: 'auto-translate' })) {\n\t\t\tRocketChat.models.Permissions.insert({ _id: 'auto-translate', roles: ['admin'] });\n\t\t}\n\t}\n});\n","RocketChat.models.Messages.addTranslations = function(messageId, translations) {\n\tconst updateObj = {};\n\tObject.keys(translations).forEach((key) => {\n\t\tconst translation = translations[key];\n\t\tupdateObj[`translations.${ key }`] = translation;\n\t});\n\treturn this.update({ _id: messageId }, { $set: updateObj });\n};\n\nRocketChat.models.Messages.addAttachmentTranslations = function(messageId, attachmentIndex, translations) {\n\tconst updateObj = {};\n\tObject.keys(translations).forEach((key) => {\n\t\tconst translation = translations[key];\n\t\tupdateObj[`attachments.${ attachmentIndex }.translations.${ key }`] = translation;\n\t});\n\treturn this.update({ _id: messageId }, { $set: updateObj });\n};\n","RocketChat.models.Subscriptions.updateAutoTranslateById = function(_id, autoTranslate) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tlet update;\n\tif (autoTranslate) {\n\t\tupdate = {\n\t\t\t$set: {\n\t\t\t\tautoTranslate\n\t\t\t}\n\t\t};\n\t} else {\n\t\tupdate = {\n\t\t\t$unset: {\n\t\t\t\tautoTranslate: 1\n\t\t\t}\n\t\t};\n\t}\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateAutoTranslateLanguageById = function(_id, autoTranslateLanguage) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tautoTranslateLanguage\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.getAutoTranslateLanguagesByRoomAndNotUser = function(rid, userId) {\n\tconst subscriptionsRaw = RocketChat.models.Subscriptions.model.rawCollection();\n\tconst distinct = Meteor.wrapAsync(subscriptionsRaw.distinct, subscriptionsRaw);\n\tconst query = {\n\t\trid,\n\t\t'u._id': { $ne: userId },\n\t\tautoTranslate: true\n\t};\n\treturn distinct('autoTranslateLanguage', query);\n};\n","Meteor.methods({\n\t'autoTranslate.saveSettings'(rid, field, value, options) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'saveAutoTranslateSettings' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'auto-translate')) {\n\t\t\tthrow new Meteor.Error('error-action-now-allowed', 'Auto-Translate is not allowed', { method: 'autoTranslate.saveSettings'});\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['autoTranslate', 'autoTranslateLanguage'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', { method: 'saveAutoTranslateSettings' });\n\t\t}\n\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveAutoTranslateSettings' });\n\t\t}\n\n\t\tswitch (field) {\n\t\t\tcase 'autoTranslate':\n\t\t\t\tRocketChat.models.Subscriptions.updateAutoTranslateById(subscription._id, value === '1' ? true : false);\n\t\t\t\tif (!subscription.autoTranslateLanguage && options.defaultLanguage) {\n\t\t\t\t\tRocketChat.models.Subscriptions.updateAutoTranslateLanguageById(subscription._id, options.defaultLanguage);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'autoTranslateLanguage':\n\t\t\t\tRocketChat.models.Subscriptions.updateAutoTranslateLanguageById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n});\n","Meteor.methods({\n\t'autoTranslate.translateMessage'(message, targetLanguage) {\n\t\tconst room = RocketChat.models.Rooms.findOneById(message && message.rid);\n\t\tif (message && room && RocketChat.AutoTranslate) {\n\t\t\treturn RocketChat.AutoTranslate.translateMessage(message, room, targetLanguage);\n\t\t}\n\t}\n});\n","Meteor.methods({\n\t'autoTranslate.getSupportedLanguages'(targetLanguage) {\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'auto-translate')) {\n\t\t\tthrow new Meteor.Error('error-action-now-allowed', 'Auto-Translate is not allowed', { method: 'autoTranslate.saveSettings'});\n\t\t}\n\n\t\treturn RocketChat.AutoTranslate.getSupportedLanguages(targetLanguage);\n\t}\n});\n\nDDPRateLimiter.addRule({\n\ttype: 'method',\n\tname: 'autoTranslate.getSupportedLanguages',\n\tuserId(/*userId*/) {\n\t\treturn true;\n\t}\n}, 5, 60000);\n"]}