{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:ldap/server/index.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/ldap.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/loginHandler.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/sync.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/syncUsers.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/testConnection.js"],"names":["module","watch","require","export","LDAP","ldapjs","v","Bunyan","logger","Logger","sections","connection","bind","search","auth","connected","options","host","RocketChat","settings","get","port","Reconnect","Internal_Log_Level","timeout","connect_timeout","idle_timeout","encryption","ca_cert","reject_unauthorized","Authentication","Authentication_UserDN","Authentication_Password","BaseDN","User_Search_Filter","User_Search_Scope","User_Search_Field","Search_Page_Size","Search_Size_Limit","group_filter_enabled","group_filter_object_class","group_filter_group_id_attribute","group_filter_group_member_attribute","group_filter_group_member_format","group_filter_group_name","connectSync","_connectSync","Meteor","wrapAsync","connectAsync","searchAllSync","_searchAllSync","searchAllAsync","callback","info","replied","connectionOptions","url","connectTimeout","idleTimeout","reconnect","log","name","component","stream","process","stderr","level","tlsOptions","rejectUnauthorized","chainLines","split","cert","ca","forEach","line","push","match","join","debug","client","createClient","bindSync","on","error","disconnect","starttls","response","setTimeout","Error","getUserFilter","username","filter","usernameFilter","map","item","length","bindIfNecessary","domainBinded","searchUsersSync","page","searchOptions","scope","sizeLimit","paged","pageSize","pagePause","searchAllPaged","getUserByIdSync","id","attribute","Unique_Identifier_Field","filters","EqualityFilter","value","Buffer","OrFilter","toString","result","Array","isArray","getUserByUsernameSync","isUserInGroup","replace","extractLdapEntryData","entry","values","raw","Object","keys","key","includes","res","entries","internalPageSize","_updateIdle","end","next","authSync","dn","password","unbind","slug","getLdapUsername","getLdapUserUniqueID","syncUserData","addLdapUser","fallbackDefaultAccountSystem","indexOf","email","loginRequest","user","digest","SHA256","algorithm","Accounts","_runLoginHandlers","registerLoginHandler","ldap","ldapOptions","undefined","ldapPass","self","ldapUser","users","userQuery","findOne","stampedToken","_generateStampedLoginToken","update","_id","$push","_hashStampedToken","setPassword","logout","userId","token","addGroup","enableQuery","enableAuthentication","enableTLSQuery","$in","syncDataQuery","groupFilterQuery","backgroundSyncQuery","add","type","i18nLabel","multiline","actionText","section","getDataToSyncUserData","importNewUsers","text","slugify","usernameField","field","concat","find","_","isEmpty","syncUserDataFieldMap","trim","userData","whitelistedUserFields","fieldMap","JSON","parse","emailList","userField","ldapField","hasOwnProperty","isObject","address","verified","el","tmpLdapField","templateVarHandler","userFieldValue","reduce","acc","stringify","emails","uniqueId","services","idAttribute","size","_setRealName","$set","_setUsername","avatar","thumbnailPhoto","jpegPhoto","rs","RocketChatFile","bufferToStream","fileStore","FileUpload","getStore","deleteByName","file","runAsUser","insert","models","Users","setAvatarOrigin","Notifications","notifyLogged","userObject","mail","createUser","count","bindEnvironment","ldapUsers","sync","findLDAPUsers","jobName","addCronJob","debounce","addCronJobDebounced","SyncedCron","nextScheduledAtDate","remove","schedule","parser","job","startup","defer","methods","ldap_sync_now","method","authz","hasRole","unblock","message","params","ldap_test_connection","console"],"mappings":"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","file":"/packages/rocketchat_ldap.js","sourcesContent":["import './loginHandler';\nimport './settings';\nimport './testConnection';\nimport './syncUsers';\nimport './sync';\n","import ldapjs from 'ldapjs';\nimport Bunyan from 'bunyan';\n\nconst logger = new Logger('LDAP', {\n\tsections: {\n\t\tconnection: 'Connection',\n\t\tbind: 'Bind',\n\t\tsearch: 'Search',\n\t\tauth: 'Auth'\n\t}\n});\n\nexport default class LDAP {\n\tconstructor() {\n\t\tthis.ldapjs = ldapjs;\n\n\t\tthis.connected = false;\n\n\t\tthis.options = {\n\t\t\thost: RocketChat.settings.get('LDAP_Host'),\n\t\t\tport: RocketChat.settings.get('LDAP_Port'),\n\t\t\tReconnect: RocketChat.settings.get('LDAP_Reconnect'),\n\t\t\tInternal_Log_Level: RocketChat.settings.get('LDAP_Internal_Log_Level'),\n\t\t\ttimeout: RocketChat.settings.get('LDAP_Timeout'),\n\t\t\tconnect_timeout: RocketChat.settings.get('LDAP_Connect_Timeout'),\n\t\t\tidle_timeout: RocketChat.settings.get('LDAP_Idle_Timeout'),\n\t\t\tencryption: RocketChat.settings.get('LDAP_Encryption'),\n\t\t\tca_cert: RocketChat.settings.get('LDAP_CA_Cert'),\n\t\t\treject_unauthorized: RocketChat.settings.get('LDAP_Reject_Unauthorized') || false,\n\t\t\tAuthentication: RocketChat.settings.get('LDAP_Authentication'),\n\t\t\tAuthentication_UserDN: RocketChat.settings.get('LDAP_Authentication_UserDN'),\n\t\t\tAuthentication_Password: RocketChat.settings.get('LDAP_Authentication_Password'),\n\t\t\tBaseDN: RocketChat.settings.get('LDAP_BaseDN'),\n\t\t\tUser_Search_Filter: RocketChat.settings.get('LDAP_User_Search_Filter'),\n\t\t\tUser_Search_Scope: RocketChat.settings.get('LDAP_User_Search_Scope'),\n\t\t\tUser_Search_Field: RocketChat.settings.get('LDAP_User_Search_Field'),\n\t\t\tSearch_Page_Size: RocketChat.settings.get('LDAP_Search_Page_Size'),\n\t\t\tSearch_Size_Limit: RocketChat.settings.get('LDAP_Search_Size_Limit'),\n\t\t\tgroup_filter_enabled: RocketChat.settings.get('LDAP_Group_Filter_Enable'),\n\t\t\tgroup_filter_object_class: RocketChat.settings.get('LDAP_Group_Filter_ObjectClass'),\n\t\t\tgroup_filter_group_id_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Id_Attribute'),\n\t\t\tgroup_filter_group_member_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Attribute'),\n\t\t\tgroup_filter_group_member_format: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Format'),\n\t\t\tgroup_filter_group_name: RocketChat.settings.get('LDAP_Group_Filter_Group_Name')\n\t\t};\n\t}\n\n\tconnectSync(...args) {\n\t\tif (!this._connectSync) {\n\t\t\tthis._connectSync = Meteor.wrapAsync(this.connectAsync, this);\n\t\t}\n\t\treturn this._connectSync(...args);\n\t}\n\n\tsearchAllSync(...args) {\n\t\tif (!this._searchAllSync) {\n\t\t\tthis._searchAllSync = Meteor.wrapAsync(this.searchAllAsync, this);\n\t\t}\n\t\treturn this._searchAllSync(...args);\n\t}\n\n\tconnectAsync(callback) {\n\t\tlogger.connection.info('Init setup');\n\n\t\tlet replied = false;\n\n\t\tconst connectionOptions = {\n\t\t\turl: `${ this.options.host }:${ this.options.port }`,\n\t\t\ttimeout: this.options.timeout,\n\t\t\tconnectTimeout: this.options.connect_timeout,\n\t\t\tidleTimeout: this.options.idle_timeout,\n\t\t\treconnect: this.options.Reconnect\n\t\t};\n\n\t\tif (this.options.Internal_Log_Level !== 'disabled') {\n\t\t\tconnectionOptions.log = new Bunyan({\n\t\t\t\tname: 'ldapjs',\n\t\t\t\tcomponent: 'client',\n\t\t\t\tstream: process.stderr,\n\t\t\t\tlevel: this.options.Internal_Log_Level\n\t\t\t});\n\t\t}\n\n\t\tconst tlsOptions = {\n\t\t\trejectUnauthorized: this.options.reject_unauthorized\n\t\t};\n\n\t\tif (this.options.ca_cert && this.options.ca_cert !== '') {\n\t\t\t// Split CA cert into array of strings\n\t\t\tconst chainLines = RocketChat.settings.get('LDAP_CA_Cert').split('\\n');\n\t\t\tlet cert = [];\n\t\t\tconst ca = [];\n\t\t\tchainLines.forEach((line) => {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (this.options.encryption === 'ssl') {\n\t\t\tconnectionOptions.url = `ldaps://${ connectionOptions.url }`;\n\t\t\tconnectionOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tconnectionOptions.url = `ldap://${ connectionOptions.url }`;\n\t\t}\n\n\t\tlogger.connection.info('Connecting', connectionOptions.url);\n\t\tlogger.connection.debug('connectionOptions', connectionOptions);\n\n\t\tthis.client = ldapjs.createClient(connectionOptions);\n\n\t\tthis.bindSync = Meteor.wrapAsync(this.client.bind, this.client);\n\n\t\tthis.client.on('error', (error) => {\n\t\t\tlogger.connection.error('connection', error);\n\t\t\tif (replied === false) {\n\t\t\t\treplied = true;\n\t\t\t\tcallback(error, null);\n\t\t\t}\n\t\t});\n\n\t\tthis.client.on('idle', () => {\n\t\t\tlogger.search.info('Idle');\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tthis.client.on('close', () => {\n\t\t\tlogger.search.info('Closed');\n\t\t});\n\n\t\tif (this.options.encryption === 'tls') {\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This shouldn't be needed in newer nodejs versions (e.g v5.6.0).\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = this.options.host;\n\n\t\t\tlogger.connection.info('Starting TLS');\n\t\t\tlogger.connection.debug('tlsOptions', tlsOptions);\n\n\t\t\tthis.client.starttls(tlsOptions, null, (error, response) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tlogger.connection.error('TLS connection', error);\n\t\t\t\t\tif (replied === false) {\n\t\t\t\t\t\treplied = true;\n\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlogger.connection.info('TLS connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.client.on('connect', (response) => {\n\t\t\t\tlogger.connection.info('LDAP connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tif (replied === false) {\n\t\t\t\tlogger.connection.error('connection time out', connectionOptions.connectTimeout);\n\t\t\t\treplied = true;\n\t\t\t\tcallback(new Error('Timeout'));\n\t\t\t}\n\t\t}, connectionOptions.connectTimeout);\n\t}\n\n\tgetUserFilter(username) {\n\t\tconst filter = [];\n\n\t\tif (this.options.User_Search_Filter !== '') {\n\t\t\tif (this.options.User_Search_Filter[0] === '(') {\n\t\t\t\tfilter.push(`${ this.options.User_Search_Filter }`);\n\t\t\t} else {\n\t\t\t\tfilter.push(`(${ this.options.User_Search_Filter })`);\n\t\t\t}\n\t\t}\n\n\t\tconst usernameFilter = this.options.User_Search_Field.split(',').map(item => `(${ item }=${ username })`);\n\n\t\tif (usernameFilter.length === 0) {\n\t\t\tlogger.error('LDAP_LDAP_User_Search_Field not defined');\n\t\t} else if (usernameFilter.length === 1) {\n\t\t\tfilter.push(`${ usernameFilter[0] }`);\n\t\t} else {\n\t\t\tfilter.push(`(|${ usernameFilter.join('') })`);\n\t\t}\n\n\t\treturn `(&${ filter.join('') })`;\n\t}\n\n\tbindIfNecessary() {\n\t\tif (this.domainBinded === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.options.Authentication !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.bind.info('Binding UserDN', this.options.Authentication_UserDN);\n\t\tthis.bindSync(this.options.Authentication_UserDN, this.options.Authentication_Password);\n\t\tthis.domainBinded = true;\n\t}\n\n\tsearchUsersSync(username, page) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: this.getUserFilter(username),\n\t\t\tscope: this.options.User_Search_Scope || 'sub',\n\t\t\tsizeLimit: this.options.Search_Size_Limit\n\t\t};\n\n\t\tif (this.options.Search_Page_Size > 0) {\n\t\t\tsearchOptions.paged = {\n\t\t\t\tpageSize: this.options.Search_Page_Size,\n\t\t\t\tpagePause: !!page\n\t\t\t};\n\t\t}\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tif (page) {\n\t\t\treturn this.searchAllPaged(this.options.BaseDN, searchOptions, page);\n\t\t}\n\n\t\treturn this.searchAllSync(this.options.BaseDN, searchOptions);\n\t}\n\n\tgetUserByIdSync(id, attribute) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field').split(',');\n\n\t\tlet filter;\n\n\t\tif (attribute) {\n\t\t\tfilter = new this.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute,\n\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t});\n\t\t} else {\n\t\t\tconst filters = [];\n\t\t\tUnique_Identifier_Field.forEach((item) => {\n\t\t\t\tfilters.push(new this.ldapjs.filters.EqualityFilter({\n\t\t\t\t\tattribute: item,\n\t\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\tfilter = new this.ldapjs.filters.OrFilter({filters});\n\t\t}\n\n\t\tconst searchOptions = {\n\t\t\tfilter,\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching by id', id);\n\t\tlogger.search.debug('search filter', searchOptions.filter.toString());\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by id', id, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tgetUserByUsernameSync(username) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: this.getUserFilter(username),\n\t\t\tscope: this.options.User_Search_Scope || 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by username', username, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tisUserInGroup(username) {\n\t\tif (!this.options.group_filter_enabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.group_filter_object_class !== '') {\n\t\t\tfilter.push(`(objectclass=${ this.options.group_filter_object_class })`);\n\t\t}\n\n\t\tif (this.options.group_filter_group_member_attribute !== '') {\n\t\t\tfilter.push(`(${ this.options.group_filter_group_member_attribute }=${ this.options.group_filter_group_member_format })`);\n\t\t}\n\n\t\tif (this.options.group_filter_group_id_attribute !== '') {\n\t\t\tfilter.push(`(${ this.options.group_filter_group_id_attribute }=${ this.options.group_filter_group_name })`);\n\t\t}\n\t\tfilter.push(')');\n\n\t\tconst searchOptions = {\n\t\t\tfilter: filter.join('').replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.debug('Group filter LDAP:', searchOptions.filter);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\textractLdapEntryData(entry) {\n\t\tconst values = entry.raw;\n\t\tObject.keys(values).forEach((key) => {\n\t\t\tconst value = values[key];\n\t\t\tif (!['thumbnailPhoto', 'jpegPhoto'].includes(key) && value instanceof Buffer) {\n\t\t\t\tvalues[key] = value.toString();\n\t\t\t}\n\t\t});\n\n\t\treturn values;\n\t}\n\n\tsearchAllPaged(BaseDN, options, page) {\n\t\tthis.bindIfNecessary();\n\n\t\tthis.client.search(BaseDN, options, (error, res) => {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tpage(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tpage(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tlet entries = [];\n\n\t\t\tconst internalPageSize = options.paged && options.paged.pageSize > 0 ? options.paged.pageSize * 2 : 500;\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\tentries.push(this.extractLdapEntryData(entry));\n\n\t\t\t\tif (entries.length >= internalPageSize) {\n\t\t\t\t\tlogger.search.info('Internal Page');\n\t\t\t\t\tthis.client._updateIdle(true);\n\t\t\t\t\tpage(null, entries, {end: false, next: () => {\n\t\t\t\t\t\t// Reset idle timer\n\t\t\t\t\t\tthis.client._updateIdle();\n\t\t\t\t\t}});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('page', (result, next) => {\n\t\t\t\tif (!next) {\n\t\t\t\t\tlogger.search.debug('Final Page');\n\t\t\t\t\tthis.client._updateIdle(true);\n\t\t\t\t\tpage(null, entries, {end: true, next: () => {\n\t\t\t\t\t\t// Reset idle timer\n\t\t\t\t\t\tthis.client._updateIdle();\n\t\t\t\t\t}});\n\t\t\t\t} else if (entries.length) {\n\t\t\t\t\tlogger.search.info('Page');\n\t\t\t\t\t// Force LDAP idle to wait the record processing\n\t\t\t\t\tthis.client._updateIdle(true);\n\t\t\t\t\tpage(null, entries, {end: !next, next: () => {\n\t\t\t\t\t\t// Reset idle timer\n\t\t\t\t\t\tthis.client._updateIdle();\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tsearchAllAsync(BaseDN, options, callback) {\n\t\tthis.bindIfNecessary();\n\n\t\tthis.client.search(BaseDN, options, (error, res) => {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tconst entries = [];\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\tentries.push(this.extractLdapEntryData(entry));\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tlogger.search.info('Search result count', entries.length);\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tauthSync(dn, password) {\n\t\tlogger.auth.info('Authenticating', dn);\n\n\t\ttry {\n\t\t\tthis.bindSync(dn, password);\n\t\t\tlogger.auth.info('Authenticated', dn);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tlogger.auth.info('Not authenticated', dn);\n\t\t\tlogger.auth.debug('error', error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.domainBinded = false;\n\t\tlogger.connection.info('Disconecting');\n\t\tthis.client.unbind();\n\t}\n}\n","/* eslint new-cap: [2, {\"capIsNewExceptions\": [\"SHA256\"]}] */\n\nimport {slug, getLdapUsername, getLdapUserUniqueID, syncUserData, addLdapUser} from './sync';\nimport LDAP from './ldap';\n\nconst logger = new Logger('LDAPHandler', {});\n\nfunction fallbackDefaultAccountSystem(bind, username, password) {\n\tif (typeof username === 'string') {\n\t\tif (username.indexOf('@') === -1) {\n\t\t\tusername = {username};\n\t\t} else {\n\t\t\tusername = {email: username};\n\t\t}\n\t}\n\n\tlogger.info('Fallback to default account system', username);\n\n\tconst loginRequest = {\n\t\tuser: username,\n\t\tpassword: {\n\t\t\tdigest: SHA256(password),\n\t\t\talgorithm: 'sha-256'\n\t\t}\n\t};\n\n\treturn Accounts._runLoginHandlers(bind, loginRequest);\n}\n\nAccounts.registerLoginHandler('ldap', function(loginRequest) {\n\tif (!loginRequest.ldap || !loginRequest.ldapOptions) {\n\t\treturn undefined;\n\t}\n\n\tlogger.info('Init LDAP login', loginRequest.username);\n\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn fallbackDefaultAccountSystem(this, loginRequest.username, loginRequest.ldapPass);\n\t}\n\n\tconst self = this;\n\tconst ldap = new LDAP();\n\tlet ldapUser;\n\n\ttry {\n\t\tldap.connectSync();\n\t\tconst users = ldap.searchUsersSync(loginRequest.username);\n\n\t\tif (users.length !== 1) {\n\t\t\tlogger.info('Search returned', users.length, 'record(s) for', loginRequest.username);\n\t\t\tthrow new Error('User not Found');\n\t\t}\n\n\t\tif (ldap.authSync(users[0].dn, loginRequest.ldapPass) === true) {\n\t\t\tif (ldap.isUserInGroup (loginRequest.username)) {\n\t\t\t\tldapUser = users[0];\n\t\t\t} else {\n\t\t\t\tthrow new Error('User not in a valid group');\n\t\t\t}\n\t\t} else {\n\t\t\tlogger.info('Wrong password for', loginRequest.username);\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t}\n\n\tif (ldapUser === undefined) {\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true) {\n\t\t\treturn fallbackDefaultAccountSystem(self, loginRequest.username, loginRequest.ldapPass);\n\t\t}\n\n\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication failed with provided username [${ loginRequest.username }]`);\n\t}\n\n\t// Look to see if user already exists\n\tlet userQuery;\n\n\tconst Unique_Identifier_Field = getLdapUserUniqueID(ldapUser);\n\tlet user;\n\n\tif (Unique_Identifier_Field) {\n\t\tuserQuery = {\n\t\t\t'services.ldap.id': Unique_Identifier_Field.value\n\t\t};\n\n\t\tlogger.info('Querying user');\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\tlet username;\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tusername = slug(getLdapUsername(ldapUser));\n\t} else {\n\t\tusername = slug(loginRequest.username);\n\t}\n\n\tif (!user) {\n\t\tuserQuery = {\n\t\t\tusername\n\t\t};\n\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\t// Login user if they exist\n\tif (user) {\n\t\tif (user.ldap !== true && RocketChat.settings.get('LDAP_Merge_Existing_Users') !== true) {\n\t\t\tlogger.info('User exists without \"ldap: true\"');\n\t\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication succeded, but there's already an existing user with provided username [${ username }] in Mongo.`);\n\t\t}\n\n\t\tlogger.info('Logging user');\n\n\t\tconst stampedToken = Accounts._generateStampedLoginToken();\n\n\t\tMeteor.users.update(user._id, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': Accounts._hashStampedToken(stampedToken)\n\t\t\t}\n\t\t});\n\n\t\tsyncUserData(user, ldapUser);\n\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true) {\n\t\t\tAccounts.setPassword(user._id, loginRequest.ldapPass, {logout: false});\n\t\t}\n\n\t\treturn {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token\n\t\t};\n\t}\n\n\tlogger.info('User does not exist, creating', username);\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') === '') {\n\t\tusername = undefined;\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Login_Fallback') !== true) {\n\t\tloginRequest.ldapPass = undefined;\n\t}\n\n\t// Create new user\n\treturn addLdapUser(ldapUser, username, loginRequest.ldapPass);\n});\n","RocketChat.settings.addGroup('LDAP', function() {\n\tconst enableQuery = {_id: 'LDAP_Enable', value: true};\n\tconst enableAuthentication = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Authentication', value: true}\n\t];\n\tconst enableTLSQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Encryption', value: {$in: ['tls', 'ssl']}}\n\t];\n\tconst syncDataQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Sync_User_Data', value: true}\n\t];\n\tconst groupFilterQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Group_Filter_Enable', value: true}\n\t];\n\tconst backgroundSyncQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Background_Sync', value: true}\n\t];\n\n\tthis.add('LDAP_Enable', false, { type: 'boolean', public: true });\n\tthis.add('LDAP_Login_Fallback', true, { type: 'boolean', enableQuery });\n\tthis.add('LDAP_Host', '', { type: 'string', enableQuery });\n\tthis.add('LDAP_Port', '389', { type: 'string', enableQuery });\n\tthis.add('LDAP_Reconnect', false, { type: 'boolean', enableQuery });\n\tthis.add('LDAP_Encryption', 'plain', { type: 'select', values: [ { key: 'plain', i18nLabel: 'No_Encryption' }, { key: 'tls', i18nLabel: 'StartTLS' }, { key: 'ssl', i18nLabel: 'SSL/LDAPS' } ], enableQuery });\n\tthis.add('LDAP_CA_Cert', '', { type: 'string', multiline: true, enableQuery: enableTLSQuery });\n\tthis.add('LDAP_Reject_Unauthorized', true, { type: 'boolean', enableQuery: enableTLSQuery });\n\tthis.add('LDAP_BaseDN', '', { type: 'string', enableQuery });\n\tthis.add('LDAP_Internal_Log_Level', 'disabled', {\n\t\ttype: 'select',\n\t\tvalues: [\n\t\t\t{ key: 'disabled', i18nLabel: 'Disabled' },\n\t\t\t{ key: 'error', i18nLabel: 'Error' },\n\t\t\t{ key: 'warn', i18nLabel: 'Warn' },\n\t\t\t{ key: 'info', i18nLabel: 'Info' },\n\t\t\t{ key: 'debug', i18nLabel: 'Debug' },\n\t\t\t{ key: 'trace', i18nLabel: 'Trace' }\n\t\t],\n\t\tenableQuery\n\t});\n\tthis.add('LDAP_Test_Connection', 'ldap_test_connection', { type: 'action', actionText: 'Test_Connection' });\n\n\tthis.section('Authentication', function() {\n\t\tthis.add('LDAP_Authentication', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Authentication_UserDN', '', { type: 'string', enableQuery: enableAuthentication });\n\t\tthis.add('LDAP_Authentication_Password', '', { type: 'password', enableQuery: enableAuthentication });\n\t});\n\n\tthis.section('Timeouts', function() {\n\t\tthis.add('LDAP_Timeout', 60000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Connect_Timeout', 1000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Idle_Timeout', 1000, {type: 'int', enableQuery});\n\t});\n\n\tthis.section('User Search', function() {\n\t\tthis.add('LDAP_User_Search_Filter', '(objectclass=*)', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_User_Search_Scope', 'sub', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_User_Search_Field', 'sAMAccountName', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Search_Page_Size', 250, { type: 'int', enableQuery });\n\t\tthis.add('LDAP_Search_Size_Limit', 1000, { type: 'int', enableQuery });\n\t});\n\n\tthis.section('User Search (Group Validation)', function() {\n\t\tthis.add('LDAP_Group_Filter_Enable', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Group_Filter_ObjectClass', 'groupOfUniqueNames', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Id_Attribute', 'cn', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Attribute', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Format', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Name', 'ROCKET_CHAT', { type: 'string', enableQuery: groupFilterQuery });\n\t});\n\n\tthis.section('Sync / Import', function() {\n\t\tthis.add('LDAP_Username_Field', 'sAMAccountName', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Unique_Identifier_Field', 'objectGUID,ibm-entryUUID,GUID,dominoUNID,nsuniqueId,uidNumber', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Default_Domain', '', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Merge_Existing_Users', false, { type: 'boolean', enableQuery });\n\n\t\tthis.add('LDAP_Sync_User_Data', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Sync_User_Data_FieldMap', '{\"cn\":\"name\", \"mail\":\"email\"}', { type: 'string', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Sync_User_Avatar', true, { type: 'boolean', enableQuery });\n\n\t\tthis.add('LDAP_Background_Sync', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Background_Sync_Interval', 'Every 24 hours', { type: 'string', enableQuery: backgroundSyncQuery });\n\t\tthis.add('LDAP_Background_Sync_Import_New_Users', true, { type: 'boolean', enableQuery: backgroundSyncQuery });\n\t\tthis.add('LDAP_Background_Sync_Keep_Existant_Users_Updated', true, { type: 'boolean', enableQuery: backgroundSyncQuery });\n\n\t\tthis.add('LDAP_Sync_Now', 'ldap_sync_now', { type: 'action', actionText: 'Execute_Synchronization_Now' });\n\t});\n});\n","/* globals slugify, SyncedCron */\n\nimport LDAP from './ldap';\n\nconst logger = new Logger('LDAPSync', {});\n\nexport function slug(text) {\n\tif (RocketChat.settings.get('UTF8_Names_Slugify') !== true) {\n\t\treturn text;\n\t}\n\ttext = slugify(text, '.');\n\treturn text.replace(/[^0-9a-z-_.]/g, '');\n}\n\n\nexport function getLdapUsername(ldapUser) {\n\tconst usernameField = RocketChat.settings.get('LDAP_Username_Field');\n\n\tif (usernameField.indexOf('#{') > -1) {\n\t\treturn usernameField.replace(/#{(.+?)}/g, function(match, field) {\n\t\t\treturn ldapUser[field];\n\t\t});\n\t}\n\n\treturn ldapUser[usernameField];\n}\n\n\nexport function getLdapUserUniqueID(ldapUser) {\n\tlet Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field');\n\n\tif (Unique_Identifier_Field !== '') {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUnique_Identifier_Field = [];\n\t}\n\n\tlet User_Search_Field = RocketChat.settings.get('LDAP_User_Search_Field');\n\n\tif (User_Search_Field !== '') {\n\t\tUser_Search_Field = User_Search_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUser_Search_Field = [];\n\t}\n\n\tUnique_Identifier_Field = Unique_Identifier_Field.concat(User_Search_Field);\n\n\tif (Unique_Identifier_Field.length > 0) {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.find((field) => {\n\t\t\treturn !_.isEmpty(ldapUser[field]);\n\t\t});\n\t\tif (Unique_Identifier_Field) {\n\t\t\tUnique_Identifier_Field = {\n\t\t\t\tattribute: Unique_Identifier_Field,\n\t\t\t\tvalue: new Buffer(ldapUser[Unique_Identifier_Field]).toString('hex')\n\t\t\t};\n\t\t}\n\t\treturn Unique_Identifier_Field;\n\t}\n}\n\nexport function getDataToSyncUserData(ldapUser, user) {\n\tconst syncUserData = RocketChat.settings.get('LDAP_Sync_User_Data');\n\tconst syncUserDataFieldMap = RocketChat.settings.get('LDAP_Sync_User_Data_FieldMap').trim();\n\n\tconst userData = {};\n\n\tif (syncUserData && syncUserDataFieldMap) {\n\t\tconst whitelistedUserFields = ['email', 'name', 'customFields'];\n\t\tconst fieldMap = JSON.parse(syncUserDataFieldMap);\n\t\tconst emailList = [];\n\t\t_.map(fieldMap, function(userField, ldapField) {\n\t\t\tswitch (userField) {\n\t\t\t\tcase 'email':\n\t\t\t\t\tif (!ldapUser.hasOwnProperty(ldapField)) {\n\t\t\t\t\t\tlogger.debug(`user does not have attribute: ${ ldapField }`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_.isObject(ldapUser[ldapField])) {\n\t\t\t\t\t\t_.map(ldapUser[ldapField], function(item) {\n\t\t\t\t\t\t\temailList.push({ address: item, verified: true });\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\temailList.push({ address: ldapUser[ldapField], verified: true });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (!_.find(whitelistedUserFields, (el) => el === userField.split('.')[0])) {\n\t\t\t\t\t\tlogger.debug(`user attribute not whitelisted: ${ userField }`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tmpLdapField = RocketChat.templateVarHandler(ldapField, ldapUser);\n\t\t\t\t\tconst userFieldValue = _.reduce(userField.split('.'), (acc, el) => acc[el], user);\n\n\t\t\t\t\tif (tmpLdapField && userFieldValue !== tmpLdapField) {\n\t\t\t\t\t\tuserData[userField] = tmpLdapField;\n\t\t\t\t\t\tlogger.debug(`user.${ userField } changed to: ${ tmpLdapField }`);\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (emailList.length > 0) {\n\t\t\tif (JSON.stringify(user.emails) !== JSON.stringify(emailList)) {\n\t\t\t\tuserData.emails = emailList;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\tif (uniqueId && (!user.services || !user.services.ldap || user.services.ldap.id !== uniqueId.value || user.services.ldap.idAttribute !== uniqueId.attribute)) {\n\t\tuserData['services.ldap.id'] = uniqueId.value;\n\t\tuserData['services.ldap.idAttribute'] = uniqueId.attribute;\n\t}\n\n\tif (user.ldap !== true) {\n\t\tuserData.ldap = true;\n\t}\n\n\tif (_.size(userData)) {\n\t\treturn userData;\n\t}\n}\n\n\nexport function syncUserData(user, ldapUser) {\n\tlogger.info('Syncing user data');\n\tlogger.debug('user', {'email': user.email, '_id': user._id});\n\tlogger.debug('ldapUser', ldapUser);\n\n\tconst userData = getDataToSyncUserData(ldapUser, user);\n\tif (user && user._id && userData) {\n\t\tlogger.debug('setting', JSON.stringify(userData, null, 2));\n\t\tif (userData.name) {\n\t\t\tRocketChat._setRealName(user._id, userData.name);\n\t\t\tdelete userData.name;\n\t\t}\n\t\tMeteor.users.update(user._id, { $set: userData });\n\t\tuser = Meteor.users.findOne({_id: user._id});\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tconst username = slug(getLdapUsername(ldapUser));\n\t\tif (user && user._id && username !== user.username) {\n\t\t\tlogger.info('Syncing user username', user.username, '->', username);\n\t\t\tRocketChat._setUsername(user._id, username);\n\t\t}\n\t}\n\n\tif (user && user._id && RocketChat.settings.get('LDAP_Sync_User_Avatar') === true) {\n\t\tconst avatar = ldapUser.thumbnailPhoto || ldapUser.jpegPhoto;\n\t\tif (avatar) {\n\t\t\tlogger.info('Syncing user avatar');\n\n\t\t\tconst rs = RocketChatFile.bufferToStream(avatar);\n\t\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\t\tfileStore.deleteByName(user.username);\n\n\t\t\tconst file = {\n\t\t\t\tuserId: user._id,\n\t\t\t\ttype: 'image/jpeg'\n\t\t\t};\n\n\t\t\tMeteor.runAsUser(user._id, () => {\n\t\t\t\tfileStore.insert(file, rs, () => {\n\t\t\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t\t\tRocketChat.models.Users.setAvatarOrigin(user._id, 'ldap');\n\t\t\t\t\t\tRocketChat.Notifications.notifyLogged('updateAvatar', {username: user.username});\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function addLdapUser(ldapUser, username, password) {\n\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\tconst userObject = {};\n\n\tif (username) {\n\t\tuserObject.username = username;\n\t}\n\n\tconst userData = getDataToSyncUserData(ldapUser, {});\n\n\tif (userData && userData.emails && userData.emails[0] && userData.emails[0].address) {\n\t\tif (Array.isArray(userData.emails[0].address)) {\n\t\t\tuserObject.email = userData.emails[0].address[0];\n\t\t} else {\n\t\t\tuserObject.email = userData.emails[0].address;\n\t\t}\n\t} else if (ldapUser.mail && ldapUser.mail.indexOf('@') > -1) {\n\t\tuserObject.email = ldapUser.mail;\n\t} else if (RocketChat.settings.get('LDAP_Default_Domain') !== '') {\n\t\tuserObject.email = `${ username || uniqueId.value }@${ RocketChat.settings.get('LDAP_Default_Domain') }`;\n\t} else {\n\t\tconst error = new Meteor.Error('LDAP-login-error', 'LDAP Authentication succeded, there is no email to create an account. Have you tried setting your Default Domain in LDAP Settings?');\n\t\tlogger.error(error);\n\t\tthrow error;\n\t}\n\n\tlogger.debug('New user data', userObject);\n\n\tif (password) {\n\t\tuserObject.password = password;\n\t}\n\n\ttry {\n\t\tuserObject._id = Accounts.createUser(userObject);\n\t} catch (error) {\n\t\tlogger.error('Error creating user', error);\n\t\tthrow error;\n\t}\n\n\tsyncUserData(userObject, ldapUser);\n\n\treturn {\n\t\tuserId: userObject._id\n\t};\n}\n\nexport function importNewUsers(ldap) {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\tlogger.error('Can\\'t run LDAP Import, LDAP is disabled');\n\t\treturn;\n\t}\n\n\tif (!ldap) {\n\t\tldap = new LDAP();\n\t\tldap.connectSync();\n\t}\n\n\tlet count = 0;\n\tldap.searchUsersSync('*', Meteor.bindEnvironment((error, ldapUsers, {next, end} = {}) => {\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tldapUsers.forEach((ldapUser) => {\n\t\t\tcount++;\n\n\t\t\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\t\t\t// Look to see if user already exists\n\t\t\tconst userQuery = {\n\t\t\t\t'services.ldap.id': uniqueId.value\n\t\t\t};\n\n\t\t\tlogger.debug('userQuery', userQuery);\n\n\t\t\tlet username;\n\t\t\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\t\t\tusername = slug(getLdapUsername(ldapUser));\n\t\t\t}\n\n\t\t\t// Add user if it was not added before\n\t\t\tconst user = Meteor.users.findOne(userQuery);\n\t\t\tif (!user) {\n\t\t\t\taddLdapUser(ldapUser, username);\n\t\t\t}\n\n\t\t\tif (!user && username && RocketChat.settings.get('LDAP_Merge_Existing_Users') === true) {\n\t\t\t\tconst userQuery = {\n\t\t\t\t\tusername\n\t\t\t\t};\n\n\t\t\t\tlogger.debug('userQuery merge', userQuery);\n\n\t\t\t\tconst user = Meteor.users.findOne(userQuery);\n\t\t\t\tif (user) {\n\t\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (count % 100 === 0) {\n\t\t\t\tlogger.info('Import running. Users imported until now:', count);\n\t\t\t}\n\t\t});\n\n\t\tif (end) {\n\t\t\tlogger.info('Import finished. Users imported:', count);\n\t\t}\n\n\t\tnext(count);\n\t}));\n}\n\nfunction sync() {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn;\n\t}\n\n\tconst ldap = new LDAP();\n\n\ttry {\n\t\tldap.connectSync();\n\n\t\tlet users;\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated') === true) {\n\t\t\tusers = RocketChat.models.Users.findLDAPUsers();\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Import_New_Users') === true) {\n\t\t\timportNewUsers(ldap);\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated') === true) {\n\t\t\tusers.forEach(function(user) {\n\t\t\t\tlet ldapUser;\n\n\t\t\t\tif (user.services && user.services.ldap && user.services.ldap.id) {\n\t\t\t\t\tldapUser = ldap.getUserByIdSync(user.services.ldap.id, user.services.ldap.idAttribute);\n\t\t\t\t} else {\n\t\t\t\t\tldapUser = ldap.getUserByUsernameSync(user.username);\n\t\t\t\t}\n\n\t\t\t\tif (ldapUser) {\n\t\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info('Can\\'t sync user', user.username);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t\treturn error;\n\t}\n\treturn true;\n}\n\nconst jobName = 'LDAP_Sync';\n\nconst addCronJob = _.debounce(Meteor.bindEnvironment(function addCronJobDebounced() {\n\tif (RocketChat.settings.get('LDAP_Background_Sync') !== true) {\n\t\tlogger.info('Disabling LDAP Background Sync');\n\t\tif (SyncedCron.nextScheduledAtDate(jobName)) {\n\t\t\tSyncedCron.remove(jobName);\n\t\t}\n\t\treturn;\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Sync_Interval')) {\n\t\tlogger.info('Enabling LDAP Background Sync');\n\t\tSyncedCron.add({\n\t\t\tname: jobName,\n\t\t\tschedule: (parser) => parser.text(RocketChat.settings.get('LDAP_Sync_Interval')),\n\t\t\tjob() {\n\t\t\t\tsync();\n\t\t\t}\n\t\t});\n\t}\n}), 500);\n\nMeteor.startup(() => {\n\tMeteor.defer(() => {\n\t\tRocketChat.settings.get('LDAP_Background_Sync', addCronJob);\n\t\tRocketChat.settings.get('LDAP_Background_Sync_Interval', addCronJob);\n\t});\n});\n","import {importNewUsers} from './sync';\n\nMeteor.methods({\n\tldap_sync_now() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tthis.unblock();\n\n\t\timportNewUsers();\n\n\t\treturn {\n\t\t\tmessage: 'Sync_in_progress',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n","import LDAP from './ldap';\n\nMeteor.methods({\n\tldap_test_connection() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tlet ldap;\n\t\ttry {\n\t\t\tldap = new LDAP();\n\t\t\tldap.connectSync();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.message);\n\t\t}\n\n\t\ttry {\n\t\t\tldap.bindIfNecessary();\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error(error.name || error.message);\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: 'Connection_success',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n"]}