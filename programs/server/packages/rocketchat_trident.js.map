{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_trident/common.coffee","meteor://ðŸ’»app/common.coffee.js","meteor://ðŸ’»app/packages/rocketchat_trident/startup.coffee"],"names":["Trident","TridentOnCreateUser","config","serverURL","authorizePath","tokenPath","identityPath","scope","addAutopublishFields","forLoggedInUser","forOtherUsers","CustomOAuth","options","user","ref","ref1","services","trident","name","username","Meteor","isServer","startup","data","RocketChat","models","Settings","find","_id","observe","added","record","settings","get","configure","changed","buttonLabelText","buttonColor","buttonLabelColor","clientId","secret","loginStyle","ServiceConfiguration","configurations","upsert","service","$set","callbacks","add","priority","HIGH","Tracker","autorun","type","group","section","i18nLabel","persistent","values","key"],"mappings":"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","file":"/packages/rocketchat_trident.js","sourcesContent":["# Trident OAuth2\n\nconfig =\n\tserverURL: ''\n\tauthorizePath: '/m/oauth2/auth/'\n\ttokenPath: '/m/oauth2/token/'\n\tidentityPath: '/m/oauth2/api/me/'\n\tscope: 'basic'\n\taddAutopublishFields:\n\t\tforLoggedInUser: ['services.trident']\n\t\tforOtherUsers: ['services.trident.name']\n\nTrident = new CustomOAuth 'trident', config\n\nclass TridentOnCreateUser\n\tconstructor: (options, user) ->\n\t\tif user.services?.trident?.name?\n\t\t\tuser.username = user.services.trident.name\n\t\treturn user\n\nif Meteor.isServer\n\tMeteor.startup ->\n\t\tRocketChat.models.Settings.find({ _id: 'API_Trident_URL' }).observe\n\t\t\tadded: (record) ->\n\t\t\t\tconfig.serverURL = RocketChat.settings.get 'API_Trident_URL'\n\t\t\t\tTrident.configure config\n\t\t\tchanged: (record) ->\n\t\t\t\tconfig.serverURL = RocketChat.settings.get 'API_Trident_URL'\n\t\t\t\tTrident.configure config\n\n\t\tif RocketChat.settings.get 'API_Trident_URL'\n\t\t\tdata =\n\t\t\t\tbuttonLabelText: RocketChat.settings.get 'Accounts_OAuth_Trident_button_label_text'\n\t\t\t\tbuttonColor: RocketChat.settings.get 'Accounts_OAuth_Trident_button_color'\n\t\t\t\tbuttonLabelColor: RocketChat.settings.get 'Accounts_OAuth_Trident_button_label_color'\n\t\t\t\tclientId: RocketChat.settings.get 'Accounts_OAuth_Trident_id'\n\t\t\t\tsecret: RocketChat.settings.get 'Accounts_OAuth_Trident_secret'\n\t\t\t\tloginStyle: RocketChat.settings.get 'Accounts_OAuth_Trident_login_style'\n\n\t\t\tServiceConfiguration.configurations.upsert {service: 'trident'}, $set: data\n\n\tRocketChat.callbacks.add 'beforeCreateUser', TridentOnCreateUser, RocketChat.callbacks.priority.HIGH\nelse\n\tMeteor.startup ->\n\t\tTracker.autorun ->\n\n\t\t\tif RocketChat.settings.get 'API_Trident_URL'\n\t\t\t\tconfig.serverURL = RocketChat.settings.get 'API_Trident_URL'\n\t\t\t\tTrident.configure config\n\n","var Trident, TridentOnCreateUser, config;\n\nconfig = {\n  serverURL: '',\n  authorizePath: '/m/oauth2/auth/',\n  tokenPath: '/m/oauth2/token/',\n  identityPath: '/m/oauth2/api/me/',\n  scope: 'basic',\n  addAutopublishFields: {\n    forLoggedInUser: ['services.trident'],\n    forOtherUsers: ['services.trident.name']\n  }\n};\n\nTrident = new CustomOAuth('trident', config);\n\nTridentOnCreateUser = (function() {\n  function TridentOnCreateUser(options, user) {\n    var ref, ref1;\n    if (((ref = user.services) != null ? (ref1 = ref.trident) != null ? ref1.name : void 0 : void 0) != null) {\n      user.username = user.services.trident.name;\n    }\n    return user;\n  }\n\n  return TridentOnCreateUser;\n\n})();\n\nif (Meteor.isServer) {\n  Meteor.startup(function() {\n    var data;\n    RocketChat.models.Settings.find({\n      _id: 'API_Trident_URL'\n    }).observe({\n      added: function(record) {\n        config.serverURL = RocketChat.settings.get('API_Trident_URL');\n        return Trident.configure(config);\n      },\n      changed: function(record) {\n        config.serverURL = RocketChat.settings.get('API_Trident_URL');\n        return Trident.configure(config);\n      }\n    });\n    if (RocketChat.settings.get('API_Trident_URL')) {\n      data = {\n        buttonLabelText: RocketChat.settings.get('Accounts_OAuth_Trident_button_label_text'),\n        buttonColor: RocketChat.settings.get('Accounts_OAuth_Trident_button_color'),\n        buttonLabelColor: RocketChat.settings.get('Accounts_OAuth_Trident_button_label_color'),\n        clientId: RocketChat.settings.get('Accounts_OAuth_Trident_id'),\n        secret: RocketChat.settings.get('Accounts_OAuth_Trident_secret'),\n        loginStyle: RocketChat.settings.get('Accounts_OAuth_Trident_login_style')\n      };\n      return ServiceConfiguration.configurations.upsert({\n        service: 'trident'\n      }, {\n        $set: data\n      });\n    }\n  });\n  RocketChat.callbacks.add('beforeCreateUser', TridentOnCreateUser, RocketChat.callbacks.priority.HIGH);\n} else {\n  Meteor.startup(function() {\n    return Tracker.autorun(function() {\n      if (RocketChat.settings.get('API_Trident_URL')) {\n        config.serverURL = RocketChat.settings.get('API_Trident_URL');\n        return Trident.configure(config);\n      }\n    });\n  });\n}\n","RocketChat.settings.add 'API_Trident_URL', '', { type: 'string', group: 'OAuth', public: true, section: 'Trident' }\nRocketChat.settings.add 'Accounts_OAuth_Trident', false, { type: 'boolean', group: 'OAuth', section: 'Trident' }\nRocketChat.settings.add 'Accounts_OAuth_Trident_id', '', { type: 'string', group: 'OAuth', section: 'Trident' }\nRocketChat.settings.add 'Accounts_OAuth_Trident_secret', '', { type: 'string', group: 'OAuth', section: 'Trident' }\nRocketChat.settings.add 'Accounts_OAuth_Trident_login_style', 'redirect', { type: 'select' , group: 'OAuth', section: \"Trident\", i18nLabel: 'Accounts_OAuth_Custom_Login_Style', persistent: true, values: [ { key: 'redirect', i18nLabel: 'Redirect' }, { key: 'popup', i18nLabel: 'Popup' }, { key: '', i18nLabel: 'Default' } ] }\nRocketChat.settings.add 'Accounts_OAuth_Trident_button_label_text', '', { type: 'string' , group: 'OAuth', section: \"Trident\", i18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text', persistent: true }\nRocketChat.settings.add 'Accounts_OAuth_Trident_button_label_color', '#FFFFFF', { type: 'string' , group: 'OAuth', section: \"Trident\", i18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color', persistent: true }\nRocketChat.settings.add 'Accounts_OAuth_Trident_button_color', '#13679A', { type: 'string', group: 'OAuth', section: 'Trident', i18nLabel: 'Accounts_OAuth_Custom_Button_Color', persistent: true }\n"]}