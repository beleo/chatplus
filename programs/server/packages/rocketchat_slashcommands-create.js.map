{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:slashcommands-create/server.js"],"names":["Create","command","params","item","getParams","str","regex","result","m","exec","index","lastIndex","push","regexp","RegExp","RocketChat","settings","get","Match","test","String","channel","trim","user","Meteor","users","findOne","userId","room","models","Rooms","findOneByName","Notifications","notifyUser","_id","Random","id","rid","ts","Date","msg","TAPi18n","__","postProcess","sprintf","language","indexOf","call","slashCommands","add"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuC;AACtC,UAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACvB,MAAMC,QAAQ,aAAd;AACA,MAAMC,SAAS,EAAf;AACA,MAAIC,UAAJ;;AACA,SAAO,CAACA,IAAIF,MAAMG,IAAN,CAAWJ,GAAX,CAAL,MAA0B,IAAjC,EAAuC;AACtC,OAAIG,EAAEE,KAAF,KAAYJ,MAAMK,SAAtB,EAAiC;AAChCL,UAAMK,SAAN;AACA;;AACDJ,UAAOK,IAAP,CAAYJ,EAAE,CAAF,CAAZ;AACA;;AACD,SAAOD,MAAP;AACA;;AAED,KAAMM,SAAS,IAAIC,MAAJ,CAAWC,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,uBAAxB,CAAX,CAAf;;AAEA,KAAIhB,YAAY,QAAZ,IAAwB,CAACiB,MAAMC,IAAN,CAAWjB,MAAX,EAAmBkB,MAAnB,CAA7B,EAAyD;AACxD;AACA;;AACD,KAAIC,UAAUR,OAAOJ,IAAP,CAAYP,OAAOoB,IAAP,EAAZ,CAAd;AACAD,WAAUA,UAAUA,QAAQ,CAAR,CAAV,GAAuB,EAAjC;;AACA,KAAIA,YAAY,EAAhB,EAAoB;AACnB;AACA;;AAED,KAAME,OAAOC,OAAOC,KAAP,CAAaC,OAAb,CAAqBF,OAAOG,MAAP,EAArB,CAAb;AACA,KAAMC,OAAOb,WAAWc,MAAX,CAAkBC,KAAlB,CAAwBC,aAAxB,CAAsCV,OAAtC,CAAb;;AACA,KAAIO,QAAQ,IAAZ,EAAkB;AACjBb,aAAWiB,aAAX,CAAyBC,UAAzB,CAAoCT,OAAOG,MAAP,EAApC,EAAqD,SAArD,EAAgE;AAC/DO,QAAKC,OAAOC,EAAP,EAD0D;AAE/DC,QAAKlC,KAAKkC,GAFqD;AAG/DC,OAAI,IAAIC,IAAJ,EAH2D;AAI/DC,QAAKC,QAAQC,EAAR,CAAW,uBAAX,EAAoC;AACxCC,iBAAa,SAD2B;AAExCC,aAAS,CAACvB,OAAD;AAF+B,IAApC,EAGFE,KAAKsB,QAHH;AAJ0D,GAAhE;AASA;AACA;;AAED,KAAIzC,UAAUF,MAAV,EAAkB4C,OAAlB,CAA0B,SAA1B,IAAuC,CAAC,CAA5C,EAA+C;AAC9C,SAAOtB,OAAOuB,IAAP,CAAY,oBAAZ,EAAkC1B,OAAlC,EAA2C,EAA3C,CAAP;AACA;;AAEDG,QAAOuB,IAAP,CAAY,eAAZ,EAA6B1B,OAA7B,EAAsC,EAAtC;AACA;;AAEDN,WAAWiC,aAAX,CAAyBC,GAAzB,CAA6B,QAA7B,EAAuCjD,MAAvC,oC","file":"/packages/rocketchat_slashcommands-create.js","sourcesContent":["function Create(command, params, item) {\n\tfunction getParams(str) {\n\t\tconst regex = /(--(\\w+))+/g;\n\t\tconst result = [];\n\t\tlet m;\n\t\twhile ((m = regex.exec(str)) !== null) {\n\t\t\tif (m.index === regex.lastIndex) {\n\t\t\t\tregex.lastIndex++;\n\t\t\t}\n\t\t\tresult.push(m[2]);\n\t\t}\n\t\treturn result;\n\t}\n\n\tconst regexp = new RegExp(RocketChat.settings.get('UTF8_Names_Validation'));\n\n\tif (command !== 'create' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\tlet channel = regexp.exec(params.trim());\n\tchannel = channel ? channel[0] : '';\n\tif (channel === '') {\n\t\treturn;\n\t}\n\n\tconst user = Meteor.users.findOne(Meteor.userId());\n\tconst room = RocketChat.models.Rooms.findOneByName(channel);\n\tif (room != null) {\n\t\tRocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date(),\n\t\t\tmsg: TAPi18n.__('Channel_already_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel]\n\t\t\t}, user.language)\n\t\t});\n\t\treturn;\n\t}\n\n\tif (getParams(params).indexOf('private') > -1) {\n\t\treturn Meteor.call('createPrivateGroup', channel, []);\n\t}\n\n\tMeteor.call('createChannel', channel, []);\n}\n\nRocketChat.slashCommands.add('create', Create);\n"]}